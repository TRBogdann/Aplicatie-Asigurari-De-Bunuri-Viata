<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAE8AAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAE8AdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDzSikpa9I80KKKSgBaKbk0ZoHYdRTaKAsOopKWgQUUUUAFJS0lAC0UlLQAUlLSUDFo
        pKWgQUUUUAJS0lLQAUUUUAFFFFABTWfFKaglYipbsrlRV2SeYKcHzVBnb1p8Upzg1mqt3Zmrp6F3NLTF
        ORT62MWrCUUUUAIaUGkoFADqKKKAGOaZk09qaKT3KWwZNSCmAU8UITFpKWkpsQUUUUgDNJmikoGLmikz
        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
        EJRS0lABRRWjHaxNGhK8kA9TSbHa5//Z
</value>
  </data>
</root>